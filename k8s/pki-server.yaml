apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-mtls-server
  namespace: default
  labels:
    app: go-mtls-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-mtls-server
  template:
    metadata:
      labels:
        app: go-mtls-server
    spec:
      containers:
        - name: go-mtls-server
          image: sirajudheenam/go-mtls-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: server-certs
              mountPath: /app/certs/server
              readOnly: true
            - name: logs
              mountPath: /app/logs
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
      volumes:
        - name: server-certs
          secret:
            secretName: go-mtls-server-certs
        - name: logs
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: go-mtls-server-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: go-mtls-server
  ports:
    - port: 8443
      targetPort: 8443
      nodePort: 30443


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-mtls-server-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: nginx
  rules:
    - host: go-mtls-server.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: go-mtls-server-service
                port:
                  number: 8443
